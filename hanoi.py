#encoding:utf-8


def hanoi(n, a, b, c):
    if n>0:#递归的终止条件
        hanoi(n-1, a, c, b)#把n-1个圆盘从a经过c移动到b
        print("moving from {} to {}".format(a, c))#把第n个圆盘,从a移动到c
        hanoi(n-1, b, a, c)#把n-1个圆盘从b经过a移动到c

hanoi(3, '柱子1', '柱子2', '柱子3')#n表示圆盘个数,A,B,C表示三根圆柱

#只有第二步是移动一步的情况
#第一、三步都是移动n-1个盘子的情况，但是
#他是比原问题规模小了1的同样的一个问题--->递归
#第一、三步就是一个递归的子问题
#汉诺塔移动次数的递推式：h(n) = h(n-1)+1+h(n-1),当n=64的时候,大约需要5800亿年(大约相当于2^n)




